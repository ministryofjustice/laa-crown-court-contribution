server:
  port: 8089

management:
  tracing:
    propagation:
      type: w3c,b3

spring:
  datasource:
    url: jdbc:h2:mem:crime_means_assessment;MODE=PostgreSQL;DB_CLOSE_DELAY=-1
    username: sa
    password: sa
    driver-class-name: org.h2.Driver

  liquibase:
    enabled: true
    change-log: classpath:db.changelog/db.changelog-master.yaml
    contexts: tests

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: none
    show-sql: true
    generate-ddl: false

  security:
    oauth2:
      client:
        provider:
          maat-api:
            token-uri: http://localhost:9999/oauth2/token
          hardship:
            token-uri: http://localhost:9999/oauth2/token
        registration:
          maat-api:
            client-id: dummy-client
            client-secret: dummy-secret
            authorization-grant-type: client_credentials
          hardship:
            client-id: dummy-client
            client-secret: dummy-secret
            authorization-grant-type: client_credentials
      resource-server:
        jwt:
          issuer-uri: ${contribution.security.issuer-uri}

contribution:
  security:
    issuer-uri: http://localhost:${server.port}

services:
  maat-api:
    base-url: http://localhost:9999
    registrationId: maat-api
  hardship-api:
    base-url: http://localhost:9999
    registrationId: hardship
