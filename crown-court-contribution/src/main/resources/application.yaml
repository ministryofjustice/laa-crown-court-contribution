server:
  port: 8089

logging:
  level:
    root: ${LOG_LEVEL}
    org.springframework.web: ${LOG_LEVEL}
    org.springframework.security: ${LOG_LEVEL}

management:
  server:
    port: 8098
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  tracing:
    propagation:
      type: w3c,b3

spring:
  datasource:
    url: jdbc:postgresql://${DATASOURCE_HOST_PORT}/${DATASOURCE_DBNAME}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      idle-timeout: 60000
      max-lifetime: 3600000

  liquibase:
    change-log: classpath:db.changelog/db.changelog-master.yaml

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    generate-ddl: false
    properties:
      hibernate.temp.use_jdbc_metadata_defaults: false

  security:
    oauth2:
      client:
        provider:
          maat-api:
            token-uri: ${MAAT_API_OAUTH_URL}
          hardship:
            token-uri: ${HARDSHIP_API_OAUTH_URL}
        registration:
          maat-api:
            client-id: ${MAAT_API_OAUTH_CLIENT_ID}
            client-secret: ${MAAT_API_OAUTH_CLIENT_SECRET}
            authorization-grant-type: client_credentials
          hardship:
            client-id: ${HARDSHIP_API_OAUTH_CLIENT_ID}
            client-secret: ${HARDSHIP_API_OAUTH_CLIENT_SECRET}
            authorization-grant-type: client_credentials
      resource-server:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI}

  autoconfigure:
    exclude: org.springframework.boot.actuate.autoconfigure.tracing.zipkin.ZipkinAutoConfiguration

resilience4j:
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 2s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retry-exceptions:
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - org.springframework.web.reactive.function.client.WebClientResponseException.BadGateway
          - org.springframework.web.reactive.function.client.WebClientResponseException.TooManyRequests
          - org.springframework.web.reactive.function.client.WebClientResponseException.InternalServerError
          - org.springframework.web.reactive.function.client.WebClientResponseException.GatewayTimeout

    instances:
      crimeHardshipService:
        base-config: default
      maatCourtDataService:
        base-config: default

services:
  maat-api:
    base-url: ${MAAT_API_BASE_URL}
    registrationId: maat-api
  hardship-api:
    base-url: ${HARDSHIP_API_BASE_URL}
    registrationId: hardship

springdoc:
  packagesToScan: uk.gov.justice.laa.crime.contribution
  api-docs:
    path: /open-api/api-docs

  swagger-ui:
    path: /open-api/swagger-ui.html
    operationsSorter: method

sentry:
  dsn: ${SENTRY_DSN}
  environment: ${SENTRY_ENV}
  release: 0.0.1
  servername: aws-eks-container
  send-default-pii: true
  attach-stacktrace: true
  sample-rate: ${SENTRY_SAMPLE_RATE}
